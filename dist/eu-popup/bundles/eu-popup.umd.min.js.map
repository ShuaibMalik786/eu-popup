{"version":3,"sources":["ng://eu-popup/lib/eu-popup-insertion.directive.ts","ng://eu-popup/lib/dialog-ref.ts","ng://eu-popup/lib/dialog-config.ts","ng://eu-popup/lib/eu-popup.component.ts","ng://eu-popup/lib/poupInner/popupInner.component.ts","ng://eu-popup/lib/dialog-injector.ts","ng://eu-popup/lib/eu-popup.service.ts","ng://eu-popup/lib/eu-popup.module.ts"],"names":["EuPopupInsertionDirective","viewContainerRef","this","Directive","args","selector","ViewContainerRef","DialogRef","Subject","_afterClosed","asObservable","prototype","close","result","next","DialogConfig","EuPopupComponent","componentFactoryResolver","cd","dialogRef","dialogConfig","_onClose","ngOnInit","ngAfterViewInit","loadChildComponent","childComponentType","detectChanges","ngOnDestroy","componentRef","destroy","onOverlayClicked","evt","dismissOnClickOutside","undefined","onDialogClicked","stopPropagation","componentType","componentFactory","resolveComponentFactory","insertionPoint","clear","createComponent","Component","template","ComponentFactoryResolver","ChangeDetectorRef","ViewChild","read","EuPopupInnerComponent","config","dialog","onCancel","onOk","DialogInjector","_parentInjector","_additionalTokens","get","token","notFoundValue","flags","value","EuPopupService","appRef","injector","appendDialogComponentToBody","map","WeakMap","set","sub","afterClosed","subscribe","_this","removeDialogComponentFromBody","unsubscribe","create","attachView","hostView","domElem","rootNodes","document","body","appendChild","dialogComponentRef","instance","onClose","detachView","open","Injectable","providedIn","ApplicationRef","Injector","EuPopupModule","NgModule","declarations","imports","CommonModule","BrowserModule","exports","entryComponents"],"mappings":"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","sourcesContent":["import {Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[euPopupInsertion]',\r\n})\r\nexport class EuPopupInsertionDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {\r\n  }\r\n}\r\n","import {Observable, Subject} from 'rxjs';\r\n\r\nexport class DialogRef {\r\n  constructor() {\r\n  }\r\n\r\n  private readonly _afterClosed = new Subject<any>();\r\n  afterClosed: Observable<any> = this._afterClosed.asObservable();\r\n\r\n  close(result?: any) {\r\n    this._afterClosed.next(result); \r\n  }\r\n}\r\n","export class DialogConfig {\r\n  type?: string;\r\n  title?: string;\r\n  text?: string;\r\n  showCancelButton?: boolean;\r\n  cancelButtonText?: string;\r\n  confirmButtonText?: string;\r\n  dismissOnClickOutside? = true;\r\n}\r\n","import {\n  Component,\n  Type,\n  OnDestroy,\n  AfterViewInit,\n  OnInit,\n  ComponentRef,\n  ViewChild,\n  ComponentFactoryResolver,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { EuPopupInsertionDirective } from './eu-popup-insertion.directive';\nimport { DialogRef } from './dialog-ref';\nimport { DialogConfig } from './dialog-config';\n\n@Component({\n  selector: 'lib-eu-popup',\n  templateUrl: './eu-popup.component.html',\n  styleUrls: ['./eu-popup.component.scss']\n})\nexport class EuPopupComponent implements OnInit, AfterViewInit, OnDestroy {\n  private readonly _onClose = new Subject<any>();\n\n  public componentRef: ComponentRef<any>;\n  public childComponentType: Type<any>;\n  public onClose = this._onClose.asObservable();\n\n  @ViewChild(EuPopupInsertionDirective, { read: false }) insertionPoint: EuPopupInsertionDirective;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cd: ChangeDetectorRef,\n    private dialogRef: DialogRef,\n    private dialogConfig: DialogConfig,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    this.cd.detectChanges();\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  onOverlayClicked(evt: MouseEvent) {\n    if (this.dialogConfig.dismissOnClickOutside || this.dialogConfig.dismissOnClickOutside == undefined) {\n      this.dialogRef.close();\n    }\n  }\n\n  onDialogClicked(evt: MouseEvent) {\n    evt.stopPropagation();\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    let viewContainerRef = this.insertionPoint.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\n  }\n}\n","import {\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {DialogConfig} from '../dialog-config';\r\nimport {DialogRef} from '../dialog-ref';\r\n\r\n@Component({\r\n  selector: 'lib-eu-popupinner',\r\n  templateUrl: './popupInner.component.html',\r\n  styleUrls: ['./popupInner.component.scss']\r\n})\r\nexport class EuPopupInnerComponent implements OnInit {\r\n  constructor(public config: DialogConfig, public dialog: DialogRef) {\r\n  }\r\n\r\n  onCancel() {\r\n    this.dialog.close(false);\r\n  }\r\n\r\n  onOk() {\r\n    this.dialog.close(true);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injector, Type, InjectionToken, InjectFlags } from '@angular/core'\r\n\r\nexport class DialogInjector implements Injector {\r\n  constructor(\r\n    private _parentInjector: Injector,\r\n    private _additionalTokens: WeakMap<any, any>\r\n  ) {}\r\n\r\n  get<T>(\r\n    token: Type<T> | InjectionToken<T>,\r\n    notFoundValue?: T,\r\n    flags?: InjectFlags\r\n  ): T\r\n  get(token: any, notFoundValue?: any)\r\n  get(token: any, notFoundValue?: any, flags?: any) {\r\n    const value = this._additionalTokens.get(token)\r\n\r\n    if (value) return value\r\n\r\n    return this._parentInjector.get<any>(token, notFoundValue)\r\n  }\r\n}\r\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  EmbeddedViewRef,\n  ComponentRef, Type,\n} from '@angular/core';\nimport {EuPopupComponent} from './eu-popup.component';\nimport {EuPopupInnerComponent} from './poupInner/popupInner.component';\nimport {DialogConfig} from './dialog-config';\nimport {DialogInjector} from './dialog-injector';\nimport {DialogRef} from './dialog-ref';\n\n@Injectable({\n  providedIn: 'root'\n}) \nexport class EuPopupService {\n\n  dialogComponentRef: ComponentRef<EuPopupComponent>;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n  }\n\n  private appendDialogComponentToBody(config: DialogConfig) {\n    const map = new WeakMap();\n    map.set(DialogConfig, config);\n\n    // add the DialogRef to dependency injection\n    const dialogRef = new DialogRef();\n    map.set(DialogRef, dialogRef);\n\n    // we want to know when somebody called the close mehtod\n    const sub = dialogRef.afterClosed.subscribe(() => {\n      // close the dialog\n      this.removeDialogComponentFromBody();\n      sub.unsubscribe();\n    });\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(EuPopupComponent);\n    const componentRef = componentFactory.create(new DialogInjector(this.injector, map));\n\n    this.appRef.attachView(componentRef.hostView);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n\n    this.dialogComponentRef = componentRef;\n\n    this.dialogComponentRef.instance.onClose.subscribe(() => {\n      this.removeDialogComponentFromBody();\n    });\n\n    // return the dialogRef\n    return dialogRef;\n  }\n\n  private removeDialogComponentFromBody() {\n    this.appRef.detachView(this.dialogComponentRef.hostView);\n    this.dialogComponentRef.destroy();\n  }\n\n  public close() {\n    this.removeDialogComponentFromBody(); \n  }\n\n  public open(config: DialogConfig) {\n    const dialogRef = this.appendDialogComponentToBody(config);\n    this.dialogComponentRef.instance.childComponentType = EuPopupInnerComponent;\n    return dialogRef;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {EuPopupComponent} from './eu-popup.component';\nimport {EuPopupInsertionDirective} from './eu-popup-insertion.directive';\nimport {EuPopupInnerComponent} from './poupInner/popupInner.component';\nimport { CommonModule } from '@angular/common';  \nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [EuPopupComponent, EuPopupInsertionDirective, EuPopupInnerComponent],\n  imports: [CommonModule, BrowserModule],\n  exports: [EuPopupComponent, EuPopupInsertionDirective, EuPopupInnerComponent],\n  entryComponents: [EuPopupComponent, EuPopupInnerComponent],\n})\nexport class EuPopupModule {\n}\n"]}