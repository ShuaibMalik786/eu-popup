{"version":3,"sources":["ng://eu-popup/lib/eu-popup-insertion.directive.ts","ng://eu-popup/lib/dialog-ref.ts","ng://eu-popup/lib/dialog-config.ts","ng://eu-popup/lib/eu-popup.component.ts","ng://eu-popup/lib/poupInner/popupInner.component.ts","ng://eu-popup/lib/dialog-injector.ts","ng://eu-popup/lib/eu-popup.service.ts","ng://eu-popup/lib/eu-popup.module.ts"],"names":["EuPopupInsertionDirective","viewContainerRef","this","Directive","args","selector","ViewContainerRef","DialogRef","Subject","_afterClosed","asObservable","prototype","close","result","next","DialogConfig","EuPopupComponent","componentFactoryResolver","cd","dialogRef","dialogConfig","_onClose","ngOnInit","ngAfterViewInit","loadChildComponent","childComponentType","detectChanges","ngOnDestroy","componentRef","destroy","onOverlayClicked","evt","dismissOnClickOutside","undefined","onDialogClicked","stopPropagation","componentType","componentFactory","resolveComponentFactory","insertionPoint","clear","createComponent","Component","template","ComponentFactoryResolver","ChangeDetectorRef","ViewChild","read","EuPopupInnerComponent","config","dialog","onCancel","onOk","DialogInjector","_parentInjector","_additionalTokens","get","token","notFoundValue","flags","value","EuPopupService","appRef","injector","appendDialogComponentToBody","map","WeakMap","set","sub","afterClosed","subscribe","_this","removeDialogComponentFromBody","unsubscribe","create","attachView","hostView","domElem","rootNodes","document","body","appendChild","dialogComponentRef","instance","onClose","detachView","open","Injectable","providedIn","ApplicationRef","Injector","EuPopupModule","NgModule","declarations","imports","CommonModule","BrowserModule","exports","entryComponents"],"mappings":"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","sourcesContent":["import {Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[euPopupInsertion]',\r\n})\r\nexport class EuPopupInsertionDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {\r\n  }\r\n}\r\n","import {Observable, Subject} from 'rxjs';\r\n\r\nexport class DialogRef {\r\n  constructor() {\r\n  }\r\n\r\n  private readonly _afterClosed = new Subject<any>();\r\n  afterClosed: Observable<any> = this._afterClosed.asObservable();\r\n\r\n  close(result?: any) {\r\n    this._afterClosed.next(result); \r\n  }\r\n}\r\n","export class DialogConfig {\r\n  type?: string;\r\n  title?: string;\r\n  text?: string;\r\n  showCancelButton?: boolean;\r\n  showOkButton?: boolean;\r\n  cancelButtonText?: string;\r\n  confirmButtonText?: string;\r\n  dismissOnClickOutside? = true;\r\n  confirmButtonBgColor?: string;\r\n  cancelButtonBgColor?: string;\r\n  cancelButtonTextColor?: string;\r\n  confirmButtonTextColor?: string;\r\n}\r\n","import {\r\n  Component,\r\n  Type,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  OnInit,\r\n  ComponentRef,\r\n  ViewChild,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { EuPopupInsertionDirective } from './eu-popup-insertion.directive';\r\nimport { DialogRef } from './dialog-ref';\r\nimport { DialogConfig } from './dialog-config';\r\n\r\n@Component({\r\n  selector: 'lib-eu-popup',\r\n  templateUrl: './eu-popup.component.html',\r\n  styleUrls: ['./eu-popup.component.scss']\r\n})\r\nexport class EuPopupComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private readonly _onClose = new Subject<any>();\r\n\r\n  public componentRef: ComponentRef<any>;\r\n  public childComponentType: Type<any>;\r\n  public onClose = this._onClose.asObservable();\r\n\r\n  @ViewChild(EuPopupInsertionDirective, { read: false }) insertionPoint: EuPopupInsertionDirective;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private cd: ChangeDetectorRef,\r\n    private dialogRef: DialogRef,\r\n    private dialogConfig: DialogConfig,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadChildComponent(this.childComponentType);\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.componentRef) {\r\n      this.componentRef.destroy();\r\n    }\r\n  }\r\n\r\n  onOverlayClicked(evt: MouseEvent) {\r\n    if (this.dialogConfig.dismissOnClickOutside || this.dialogConfig.dismissOnClickOutside == undefined) {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  onDialogClicked(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  loadChildComponent(componentType: Type<any>) {\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\r\n\r\n    let viewContainerRef = this.insertionPoint.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {DialogConfig} from '../dialog-config';\r\nimport {DialogRef} from '../dialog-ref';\r\n\r\n@Component({\r\n  selector: 'lib-eu-popupinner',\r\n  templateUrl: './popupInner.component.html',\r\n  styleUrls: ['./popupInner.component.scss']\r\n})\r\nexport class EuPopupInnerComponent implements OnInit {\r\n  constructor(public config: DialogConfig, public dialog: DialogRef) {\r\n  }\r\n\r\n  onCancel() {\r\n    this.dialog.close(false);\r\n  }\r\n\r\n  onOk() {\r\n    this.dialog.close(true);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injector, Type, InjectionToken, InjectFlags } from '@angular/core'\r\n\r\nexport class DialogInjector implements Injector {\r\n  constructor(\r\n    private _parentInjector: Injector,\r\n    private _additionalTokens: WeakMap<any, any>\r\n  ) {}\r\n\r\n  get<T>(\r\n    token: Type<T> | InjectionToken<T>,\r\n    notFoundValue?: T,\r\n    flags?: InjectFlags\r\n  ): T\r\n  get(token: any, notFoundValue?: any)\r\n  get(token: any, notFoundValue?: any, flags?: any) {\r\n    const value = this._additionalTokens.get(token)\r\n\r\n    if (value) return value\r\n\r\n    return this._parentInjector.get<any>(token, notFoundValue)\r\n  }\r\n}\r\n","import {\r\n  Injectable,\r\n  ComponentFactoryResolver,\r\n  ApplicationRef,\r\n  Injector,\r\n  EmbeddedViewRef,\r\n  ComponentRef, Type,\r\n} from '@angular/core';\r\nimport {EuPopupComponent} from './eu-popup.component';\r\nimport {EuPopupInnerComponent} from './poupInner/popupInner.component';\r\nimport {DialogConfig} from './dialog-config';\r\nimport {DialogInjector} from './dialog-injector';\r\nimport {DialogRef} from './dialog-ref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n}) \r\nexport class EuPopupService {\r\n\r\n  dialogComponentRef: ComponentRef<EuPopupComponent>;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private injector: Injector\r\n  ) {\r\n  }\r\n\r\n  private appendDialogComponentToBody(config: DialogConfig) {\r\n    const map = new WeakMap();\r\n    map.set(DialogConfig, config);\r\n\r\n    // add the DialogRef to dependency injection\r\n    const dialogRef = new DialogRef();\r\n    map.set(DialogRef, dialogRef);\r\n\r\n    // we want to know when somebody called the close mehtod\r\n    const sub = dialogRef.afterClosed.subscribe(() => {\r\n      // close the dialog\r\n      this.removeDialogComponentFromBody();\r\n      sub.unsubscribe();\r\n    });\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(EuPopupComponent);\r\n    const componentRef = componentFactory.create(new DialogInjector(this.injector, map));\r\n\r\n    this.appRef.attachView(componentRef.hostView);\r\n\r\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    document.body.appendChild(domElem);\r\n\r\n    this.dialogComponentRef = componentRef;\r\n\r\n    this.dialogComponentRef.instance.onClose.subscribe(() => {\r\n      this.removeDialogComponentFromBody();\r\n    });\r\n\r\n    // return the dialogRef\r\n    return dialogRef;\r\n  }\r\n\r\n  private removeDialogComponentFromBody() {\r\n    this.appRef.detachView(this.dialogComponentRef.hostView);\r\n    this.dialogComponentRef.destroy();\r\n  }\r\n\r\n  public close() {\r\n    this.removeDialogComponentFromBody(); \r\n  }\r\n\r\n  public open(config: DialogConfig) {\r\n    const dialogRef = this.appendDialogComponentToBody(config);\r\n    this.dialogComponentRef.instance.childComponentType = EuPopupInnerComponent;\r\n    return dialogRef;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { EuPopupComponent } from './eu-popup.component';\r\nimport { EuPopupInsertionDirective } from './eu-popup-insertion.directive';\r\nimport { EuPopupInnerComponent } from './poupInner/popupInner.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n@NgModule({\r\n  declarations: [EuPopupComponent, EuPopupInsertionDirective, EuPopupInnerComponent],\r\n  imports: [CommonModule, BrowserModule],\r\n  exports: [EuPopupComponent, EuPopupInsertionDirective, EuPopupInnerComponent],\r\n  entryComponents: [EuPopupComponent, EuPopupInnerComponent],\r\n})\r\nexport class EuPopupModule {\r\n}\r\n"]}